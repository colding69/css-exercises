body {
  background: #eee;
  font-family: sans-serif;
}

.card {
  width: 400px;
  background: #fff;
  margin: 16px auto;
  /* The white space between edge of the card and its blue sections is the border. */
  /* THIS IS WRONG!  The space between edge of the content and its blue borders is the PADDING!*/
  border: solid 8px white;
}

/* 
Group each of the blue sections inside the cards together,
apply a rule for 8px margin-bottom for all of them.

THIS IS WRONG! YOU SHOULDN'T HAVE ADDED .button-container TO THE GROUP
THIS IS WHY THERE WAS EXTRA BIG WHITE MARGIN AT THE BOTTOM,

THE GROUPING SHOULD BE
.card,
.title,
.content

'
*/
.title,
.content,
.button-container {
  margin-bottom: 8px;
}


.title {
  background: #e3f4ff;
  /* The title of the card uses a 16px font. */
  font-size:16px;
  /* 
  8px between the title text and the edge of the title section,
  hence make the padding 8px.
  */
  padding:8px;
}

.content {
  background: #e3f4ff;
  /* 
  16px space on top and bottom
  8px space on either side.
  padding: y, x
  */
  padding: 16px 8px;
}

.button-container {
  background: #e3f4ff;
  padding: 8px;
  /* 
  You cannot set everything in button container as flexbox items here,
  This is because .button-container has a higher specificity so its display type
  will inherit onto button, which would make button not start on a newline.

  My hack here is to thus use text algin center to make the paragraph central.
  */
  text-align: center;
}

button {
  background: white;
  border: 1px solid #eee;
  padding: 8px 24px;
  /* Set the button into a block display to break it onto a newline.*/
  display: block;
  /* 
  A hack here to make the button central by setting margin to auto.
  If the auto value is set, the margin settings will automatically position
  element to middle of container.
  */
  margin: auto;
}
